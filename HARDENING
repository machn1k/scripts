###############################################################################################
# OS Hardening
#
# Functions exist for organizational purposes
# 
# Hardening 1: http://ubuntuforums.org/showthread.php?t=1002167 
# Hardening 2: https://help.ubuntu.com/community/Security
# Folder Encryption: https://help.ubuntu.com/community/FolderEncryption 
# Security Tools: https://help.ubuntu.com/community/InstallingSecurityTools
# OpenSSH: https://help.ubuntu.com/community/SSH/OpenSSH/Advanced?action=show&redirect=Advanced
################################################################################################

### Configure and Use AppArmor: Ubuntu Only
aprmr () {
    less cat usr.sbin.mysqld
    less cat usr.sbin.apache2
    #AppArmor Logging: Activity logged by auditd and saved to–
    less /var/log/audit/audit.log
}

files () {
    # Limit access to 'su'
    chown root:admin /bin/su sudo 
    chmod 04750 /bin/su

    #Securing History
    chattr +I .bash_history
    chattr +a .bash_history 
    #chattr +i /etc/shadow
    chattr ­R +i /bin
    chattr ­R +i /sbin
    chattr ­R +i /boot
    chattr ­R +i /lib
    chattr ­R +i /usr
    
    #Files to consider CHMODing
    chmod 700 /bin/ping
    chmod 700 /usr/bin/who 
    chmod 700 /usr/bin/w 
    chmod 700 /usr/bin/locate 
    chmod 700 /usr/bin/whereis 
    chmod 700 /sbin/ifconfig 
    chmod 700 /bin/nano 
    chmod 700 /usr/bin/vi 
    chmod 700 /usr/bin/which 
    chmod 700 /usr/bin/gcc 
    chmod 700 /usr/bin/make 
    chmod 700 /usr/bin/apt­get 
    chmod 700 /usr/bin/aptitude
    
    # Aliases
    echo "alias ll='ls ­l'" >> ~/
    echo "alias ipp=’ifconfig ­a’" >> 
    lsnet='lsof ­i ­n'
}

### Groups: Create admin group, add user to it.
grps () {
    groups $(whoami)  # Verify groups
    newgrp admin && newgrp sshusers
    usermod ­a ­G admin,sshusers $(whoami)
    usermod ­g admin $(whoami)  #Make admin primary group
}

iptbls () {
    vi /etc/sysconfig/iptables  #Delete all IPtables current rules

    #IPTables: limit an IP address from making more than 4 new SSH connections per min.
    iptables ­N rate­limit
    iptables ­A rate­limit ­p tcp ­m conntrack ­­ctstate NEW ­m limit ­­limit 4/min ­­limit­burst 4 ­j RETURN $   iptables ­A rate­limit ­j DROP
    iptables ­I INPUT 1 ­p tcp ­­dport 22 ­j rate­limit
}


ipv6 () {
    echo -e "Change the line containing: alias net­pf­10 ipv6\n" | less
    vi /etc/modprobe.d/aliases  # Disable IPv6: Requires Reboot

    #   —————————— modprobe aliases ——-———————— 
    #   alias net­pf­10 off ipv6
    #   ———————————————————————————————————————
}

#Install NTP, activate it as a service
ntp () {
    #apt-­get install ntp 
    
    chkconfig ntpd on
    # Does this take effect upon command, or on existing password.

    vi /etc/ntp.conf  # Edit NTP config, use pool servers for increased accuracy.
    #   —————————— ntp.conf file ——————————————————————— 
    #   server 0.north­america.pool.ntp.org
    #   server 1.north­america.pool.ntp.org
    #   server 2.north­america.pool.ntp.org
    #   server 3.north­america.pool.ntp.org 
    #   ———————————————————————————————————————
    /etc/init.d/ntp start
    
    #IPtables: Accept UDP connections from NTP
    iptables ­I INPUT ­p udp ­­dport 123 ­j ACCEPT
    iptables ­I OUTPUT ­p udp ­­sport 123 ­j ACCEPT
}

ntwrk_mon () {
    lsof ­i ­n | egrep 'COMMAND|LISTEN|UDP'   #List open files with network connectivity (see aliases)
    netstat   
    ps aux | grep '[process]'     #Processes
    sysv­rc­conf ­­list | grep        #Running Services
    net/ipv4/tcp_syncookies = 1   #Packet Flooding Prevention
    sudo find / \( ­perm ­4000 ­o ­perm ­2000 \) $ sudo find / ­perm ­4000 ­o ­perm ­2000     #Find SUID & SGID files on the system
    chmod ­s [file]
}

part_schema () {
    
    # Check partition schema. Change mount points: /tmp (noexec) AND /home(nosuid)
    mount
    vi /etc/fstab
    #   ———————— fstab File ­—————————————————————————— 
    #   /dev/[mnt pt: tmp] 
    #   /tmp ext3 defaults,noexec,nodev 1 2
    #   /dev/[mnt pt: home] 
    #   /home ext3 defaults,nosuid,nodev 1 2 
    #   ———————————————————————————————————————

    # Verify the configuration, re­mount partitions, check output.
    mount ­o remount /tmp && mount | grep /tmp
    mount ­o remount /home && mount | grep /home
}

pw_mgmt () {
    
    # Edit PAM, CHANGE the existing lines to equal the following (ONE LINE EACH). Lockout policy, PAM file.
    vi /etc/pam.d/system­auth
    #   ——————————— pam.d/system­auth ——————————————————— 
    #   password requisite pam_cracklib.so try_first_pass retry=3
    #   minlength=10 difok=2 lcredit=1 ucredit=1 dcredit=1 ocredit=2
    #   password sufficient pam_unix.so use_authtok md5 nullok shadow remember=10
    #   auth required pam_tally.so onerr=fail deny=3 unlock_time=360
    #   ———————————————————————————————————————
    
    #Password complexity system requirements. Edit the login definitions file,
    vi /etc/login.defs
    
    #   ———————— login.defs ­——————————————————————————
    #   PASS_MIN_LEN 8
    #   PASS_MAX_DAYS 45
    #   PASS_MIN_DAYS 3
    #   PASS_WARN_AGE 7
    #   ———————————————————————————————————————

    #Turn off Password aging
    chage ­M 99999 userName
    chage ­M 60 ­m 7 ­W 7 userName
}

# SSH
ssh () {
    #No root login, must have password, allow only 'sshusers', use ssh protocol 2.
    cat /etc/ssh/ssh_config | grep 'AllowGroups\|PermitRoot\|Protocol\|RSAAuthentication' | less
    vi /etc/ssh/ssh_config # This is the client configuration
    #vi /etc/ssh/sshd_config # This is the server configuration
    #   ———— sshd_config File ———————————————————————————
    #   PermitRootLogin no
    #   PasswordAuthentication yes
    #   AllowGroups sshusers
    #   Protocol 2 
    #   ——————————————————————————————————————— 
    ### LOGIC
    /etc/init.d/ssh restart # Restart
    #$ services sshd restart 
    ssh­keygen -­t rsa ­-b 4096 -f ~/.ssh/rsa_key
    ssh­keygen ­-t dsa -­b 1024 -f ~/.ssh/dsa_key

    echo -e "$ ssh $(whoami)@localhost # Test an SSH configuration\n" | less
}

### Sudo
sudr () {
    visudo    # Edit sudoers file for admin privilege specification
    #   ———————— sudoers ­—————————————————————— 
    #   root ALL=(ALL) ALL
    #   [user] ALL=(ALL) ALL
    #   %admin ALL=(ALL) ALL
    #   ———————————————————————————————————————
}
